[{"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\index.js":"1","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\App.js":"2","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\FormElements\\Button.js":"3","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\FormElements\\Input.js":"4","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\NewDieselForm.js":"5","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\NavLinks.js":"6","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\MainHeader.js":"7","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\MainNavigation.js":"8","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\Home.js":"9","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\NewGasForm.js":"10","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\hooks\\http-hook.js":"11","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\hooks\\form-hook.js":"12","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\UIElements\\LoadingSpinner.js":"13","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\utils\\validators.js":"14","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\index.js":"15","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\App.js":"16","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\MainNavigation.js":"17","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\Home.js":"18","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\NewDieselForm.js":"19","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\NewGasForm.js":"20","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\MainHeader.js":"21","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\NavLinks.js":"22","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\FormElements\\Button.js":"23","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\UIElements\\LoadingSpinner.js":"24","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\utils\\validators.js":"25","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\hooks\\form-hook.js":"26","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\hooks\\http-hook.js":"27","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\FormElements\\Input.js":"28"},{"size":174,"mtime":1611307142779,"results":"29","hashOfConfig":"30"},{"size":1061,"mtime":1614003218331,"results":"31","hashOfConfig":"30"},{"size":351,"mtime":1611233605191,"results":"32","hashOfConfig":"30"},{"size":2181,"mtime":1614340195822,"results":"33","hashOfConfig":"30"},{"size":4941,"mtime":1614342263640,"results":"34","hashOfConfig":"30"},{"size":1302,"mtime":1611314395233,"results":"35","hashOfConfig":"30"},{"size":237,"mtime":1611307273866,"results":"36","hashOfConfig":"30"},{"size":552,"mtime":1614340524133,"results":"37","hashOfConfig":"30"},{"size":105,"mtime":1612166392863,"results":"38","hashOfConfig":"30"},{"size":18911,"mtime":1614343236827,"results":"39","hashOfConfig":"30"},{"size":1556,"mtime":1612792938402,"results":"40","hashOfConfig":"30"},{"size":1746,"mtime":1612871588117,"results":"41","hashOfConfig":"30"},{"size":302,"mtime":1612861162980,"results":"42","hashOfConfig":"30"},{"size":449,"mtime":1612872336712,"results":"43","hashOfConfig":"30"},{"size":174,"mtime":1614351026517,"results":"44","hashOfConfig":"45"},{"size":1061,"mtime":1614351026454,"results":"46","hashOfConfig":"45"},{"size":552,"mtime":1614351026481,"results":"47","hashOfConfig":"45"},{"size":105,"mtime":1614351026520,"results":"48","hashOfConfig":"45"},{"size":5422,"mtime":1614367315598,"results":"49","hashOfConfig":"45"},{"size":19905,"mtime":1614366925677,"results":"50","hashOfConfig":"45"},{"size":237,"mtime":1614351026475,"results":"51","hashOfConfig":"45"},{"size":1302,"mtime":1614351026488,"results":"52","hashOfConfig":"45"},{"size":351,"mtime":1614351026461,"results":"53","hashOfConfig":"45"},{"size":302,"mtime":1614351026504,"results":"54","hashOfConfig":"45"},{"size":449,"mtime":1614351026538,"results":"55","hashOfConfig":"45"},{"size":1746,"mtime":1614351026509,"results":"56","hashOfConfig":"45"},{"size":1556,"mtime":1614351026512,"results":"57","hashOfConfig":"45"},{"size":2137,"mtime":1614366531455,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1i9enz9",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nk1f7e",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\index.js",[],["120","121"],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\App.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\FormElements\\Button.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\FormElements\\Input.js",["122"],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\NewDieselForm.js",["123","124"],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\NavLinks.js",["125"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport MainHeader from './MainHeader';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n   \r\n      return (\r\n            // <ul >\r\n            //     <a className=\"nav-links button\" href=\"/test\">\r\n            //         <li  >MERGI MAI DEPARTE</li>\r\n            //     </a>\r\n                \r\n            //     <a className=\"nav-links button\"  href=\"/altul\">\r\n            //         <li>MERGI MAI DEPARTE</li>\r\n            //     </a>\r\n            // </ul>\r\n\r\n           <ul className=\"nav-links\">\r\n                <li>\r\n                    <NavLink to=\"/acasa\">\r\n                        ACASA\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/editeaza_diesel\">\r\n                        EDITEAZA DIESEL\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/editeaza_benzina\">\r\n                        EDITEAZA BENZINA\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/finalizeaza\">\r\n                        FINALIZEAZA\r\n                    </NavLink>\r\n                </li>\r\n           </ul>\r\n        );\r\n};\r\n\r\nexport default NavLinks;","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\MainHeader.js",["126"],"import react from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <header className=\"main-header\">\r\n            { props.children }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default MainHeader;","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\Navigation\\MainNavigation.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\Home.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\pages\\NewGasForm.js",["127","128"],"import React, { useEffect, useState } from 'react';\r\nimport Input from '../FormElements/Input';\r\nimport Button from '../FormElements/Button';\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useForm } from '../hooks/form-hook';\r\n\r\nimport { VALIDATOR_REQUIRE } from '../utils/validators';\r\n\r\nimport './NewGasForm.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst NewGasForm = () => {\r\n    const [loadedData, setLoadedData] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    let { type, id, filename, tur_rpm_1, tur_rpm_2, temp_c_1, temp_c_2 } = useParams();\r\n\r\n    let disabled = true;\r\n\r\n    const dataSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(`http://localhost:5001/api/gas/${filename}`, \r\n            'PATCH', \r\n            JSON.stringify({\r\n                lambda_1: formState.inputs.lambda_1.value,\r\n                lambda_2: formState.inputs.lambda_2.value,\r\n                hc_1: formState.inputs.hc_1.value,\r\n                hc_2: formState.inputs.hc_2.value,\r\n                o2_1: formState.inputs.o2_1.value,\r\n                o2_2: formState.inputs.o2_2.value,\r\n                co2_1: formState.inputs.co2_1.value,\r\n                co2_2: formState.inputs.co2_2.value,\r\n                co_1: formState.inputs.co_1.value,\r\n                co_2: formState.inputs.co_2.value,\r\n                coc_1: formState.inputs.coc_1.value,\r\n                coc_2: formState.inputs.coc_2.value,\r\n                afr_1: formState.inputs.afr_1.value,\r\n                afr_2: formState.inputs.afr_2.value,\r\n                tur_rpm_1: formState.inputs.tur_rpm_1.value,\r\n                tur_rpm_2: formState.inputs.tur_rpm_2.value,\r\n                temp_c_1: formState.inputs.temp_c_1.value,\r\n                temp_c_2: formState.inputs.temp_c_2.value\r\n            }), {'Content-Type': 'application/json'}\r\n            );\r\n\r\n            \r\n        } catch(err) {}\r\n    }\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        lambda_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        lambda_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        hc_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        hc_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        o2_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        o2_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        co2_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        co2_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        co_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        co_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        coc_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        coc_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        afr_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        afr_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        tur_rpm_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        tur_rpm_2: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        temp_c_1: {\r\n            value: '',\r\n            isValid: true\r\n        },\r\n        temp_c_2: {\r\n            value: '',\r\n            isValid: true\r\n        }\r\n    }); \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5001/api/gas/${type}/${id}`);\r\n                setLoadedData(responseData);   \r\n    \r\n                setFormData({\r\n                    lambda_1: {\r\n                        value: responseData.lambda_1,\r\n                        isValid: true,\r\n                        disabled: true\r\n                    },\r\n                    lambda_2: {\r\n                        value: responseData.lambda_2,\r\n                        isValid: true\r\n                    },\r\n                    hc_1: {\r\n                        value: responseData.hc_1,\r\n                        isValid: true\r\n                    },\r\n                    hc_2: {\r\n                        value: responseData.hc_2,\r\n                        isValid: true\r\n                    },\r\n                    o2_1: {\r\n                        value: responseData.o2_1,\r\n                        isValid: true\r\n                    },\r\n                    o2_2: {\r\n                        value: responseData.o2_2,\r\n                        isValid: true\r\n                    },\r\n                    co2_1: {\r\n                        value: responseData.co2_1,\r\n                        isValid: true\r\n                    },\r\n                    co2_2: {\r\n                        value: responseData.co2_2,\r\n                        isValid: true\r\n                    },\r\n                    co_1: {\r\n                        value: responseData.co_1,\r\n                        isValid: true\r\n                    },\r\n                    co_2: {\r\n                        value: responseData.co_2,\r\n                        isValid: true\r\n                    },\r\n                    coc_1: {\r\n                        value: responseData.coc_1,\r\n                        isValid: true\r\n                    },\r\n                    coc_2: {\r\n                        value: responseData.coc_2,\r\n                        isValid: true\r\n                    },\r\n                    afr_1: {\r\n                        value: responseData.afr_1,\r\n                        isValid: true\r\n                    },\r\n                    afr_2: {\r\n                        value: responseData.afr_2,\r\n                        isValid: true\r\n                    },\r\n                    tur_rpm_1: {\r\n                        value: tur_rpm_1,\r\n                        isValid: true\r\n                    },\r\n                    tur_rpm_2: {\r\n                        value: tur_rpm_2,\r\n                        isValid: true\r\n                    },\r\n                    temp_c_1: {\r\n                        value: temp_c_1,\r\n                        isValid: true\r\n                    },\r\n                    temp_c_2: {\r\n                        value: temp_c_2,\r\n                        isValid: true\r\n                    }\r\n                }, true);\r\n            } catch (err) {console.log(err)}\r\n        };\r\n        fetchData();\r\n    }, [sendRequest, type, id, setFormData]);\r\n\r\n    if(isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(!loadedData && error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <h2>Could not find data</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const enableForm = async event => {\r\n        disabled = !disabled;\r\n        setFormData({\r\n            lambda_1: {\r\n                disabled: false\r\n            }\r\n        });\r\n        console.log(disabled)\r\n    }\r\n\r\n    //console.log(\"loadedDAta\", loadedData);\r\n    return (\r\n        <React.Fragment>\r\n            { !isLoading && loadedData && \r\n            <form className=\"gas-form\" onSubmit={dataSubmitHandler}>\r\n                <div className=\"row\">\r\n                    <div className=\"column\" onClick={enableForm}>\r\n                        <Input\r\n                            id=\"lambda_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Lambda 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.lambda_1}\r\n                            initialValid={true}\r\n                            disabled={false}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"lambda_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Lambda 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.lambda_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">    \r\n                        <Input\r\n                            id=\"hc_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Hc 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.hc_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">    \r\n                        <Input\r\n                            id=\"hc_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Hc 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.hc_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"o2_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"O2 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.o2_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"o2_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"O2 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.o2_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"co2_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"CO2 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.co2_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                         <Input\r\n                            id=\"co2_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"CO2 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.co2_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"co_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"CO 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.co_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"co_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"CO 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.co_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"coc_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"COcorr. 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.coc_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"coc_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"COcorr. 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.coc_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"afr_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"AFR(BNZ) 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.afr_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"afr_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"AFR(BNZ) 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={loadedData.afr_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"tur_rpm_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Tur.(RPM) 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={tur_rpm_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"tur_rpm_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Tur.(RPM) 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={tur_rpm_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"temp_c_1\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Temp C 1\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={temp_c_1}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Input\r\n                            id=\"temp_c_2\"\r\n                            element=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Temp C 2\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"please enter a value\"\r\n                            onInput={inputHandler}\r\n                            initialValue={temp_c_2}\r\n                            initialValid={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" disabled={!formState.isValid}>FINALIZEAZA</Button>\r\n            </form>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NewGasForm;","D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\hooks\\http-hook.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\hooks\\form-hook.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\UIElements\\LoadingSpinner.js",[],"D:\\proiecte\\sorin ITP\\software diagnoza\\client\\src\\utils\\validators.js",["129"],"import { isValidElement } from \"react\";\r\n\r\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n\r\n    for (const validator of validators) {\r\n        if(validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n    }\r\n    \r\n    return isValid;\r\n};","C:\\users\\cornel\\Desktop\\itp_app_client\\src\\index.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\App.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\MainNavigation.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\Home.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\NewDieselForm.js",["130","131"],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\pages\\NewGasForm.js",["132","133"],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\MainHeader.js",["134"],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\Navigation\\NavLinks.js",["135"],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\FormElements\\Button.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\UIElements\\LoadingSpinner.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\utils\\validators.js",["136"],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\hooks\\form-hook.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\hooks\\http-hook.js",[],"C:\\users\\cornel\\Desktop\\itp_app_client\\src\\FormElements\\Input.js",["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":66,"column":17,"nodeType":"145","endLine":66,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":16,"column":44,"nodeType":"148","messageId":"149","endLine":16,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":66,"column":8,"nodeType":"152","endLine":66,"endColumn":26,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"154","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":18},{"ruleId":"146","severity":1,"message":"155","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":16,"column":44,"nodeType":"148","messageId":"149","endLine":16,"endColumn":54},{"ruleId":"150","severity":1,"message":"156","line":213,"column":8,"nodeType":"152","endLine":213,"endColumn":44,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"158","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":16,"column":44,"nodeType":"148","messageId":"149","endLine":16,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":66,"column":8,"nodeType":"152","endLine":66,"endColumn":26,"suggestions":"159"},{"ruleId":"146","severity":1,"message":"147","line":16,"column":44,"nodeType":"148","messageId":"149","endLine":16,"endColumn":54},{"ruleId":"150","severity":1,"message":"156","line":213,"column":8,"nodeType":"152","endLine":213,"endColumn":44,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"155","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"154","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":18},{"ruleId":"146","severity":1,"message":"158","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":24},{"ruleId":"146","severity":1,"message":"161","line":34,"column":29,"nodeType":"148","messageId":"149","endLine":34,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":65,"column":17,"nodeType":"145","endLine":65,"endColumn":38},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'clearError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ral_rpm', 'reg_rpm', and 'tbaza_s'. Either include them or remove the dependency array.","ArrayExpression",["164"],"'MainHeader' is defined but never used.","'react' is defined but never used.","React Hook useEffect has missing dependencies: 'temp_c_1', 'temp_c_2', 'tur_rpm_1', and 'tur_rpm_2'. Either include them or remove the dependency array.",["165"],"'isValidElement' is defined but never used.",["166"],["167"],"'disabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"168","fix":"172"},{"desc":"170","fix":"173"},"Update the dependencies array to be: [k_m, ral_rpm, reg_rpm, setFormData, tbaza_s]",{"range":"174","text":"175"},"Update the dependencies array to be: [sendRequest, type, id, setFormData, tur_rpm_1, tur_rpm_2, temp_c_1, temp_c_2]",{"range":"176","text":"177"},{"range":"178","text":"175"},{"range":"179","text":"177"},[1933,1951],"[k_m, ral_rpm, reg_rpm, setFormData, tbaza_s]",[6627,6663],"[sendRequest, type, id, setFormData, tur_rpm_1, tur_rpm_2, temp_c_1, temp_c_2]",[1933,1951],[6564,6600]]